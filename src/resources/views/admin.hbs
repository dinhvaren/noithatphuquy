<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    :root {
        --primary-color: #8B4513;
        --secondary-color: #A0522D;
        --accent-color: #CD853F;
        --success-color: #228B22;
        --warning-color: #DAA520;
        --danger-color: #B22222;
        --light-color: #F5F5DC;
        --text-color: #4A4A4A;
        --border-color: #DEB887;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: var(--light-color);
        color: var(--text-color);
    }

    .sidebar {
        min-height: 100vh;
        background: linear-gradient(180deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    }

    .nav-link {
        color: #fff;
        padding: 12px 20px;
        margin: 4px 0;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .nav-link:hover {
        background-color: rgba(255, 255, 255, 0.1);
        transform: translateX(5px);
    }

    .nav-link.active {
        background-color: var(--accent-color);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .nav-link i {
        margin-right: 10px;
        font-size: 1.2em;
    }

    .content {
        padding: 30px;
    }

    .card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        margin-bottom: 25px;
        background-color: #fff;
        border: 1px solid var(--border-color);
    }

    .card:hover {
        transform: translateY(-5px);
    }

    .card-body {
        padding: 25px;
    }

    .table {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: 1px solid var(--border-color);
    }

    .table thead th {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 15px;
    }

    .table tbody td {
        padding: 15px;
        vertical-align: middle;
        border-color: var(--border-color);
    }

    .table img {
        width: 80px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border: 1px solid var(--border-color);
    }

    .badge {
        padding: 8px 12px;
        border-radius: 20px;
        font-weight: 500;
    }

    .btn {
        border-radius: 8px;
        padding: 8px 16px;
        transition: all 0.3s ease;
    }

    .btn-sm {
        padding: 6px 12px;
    }

    .btn-primary {
        background-color: var(--accent-color);
        border: none;
    }

    .btn-primary:hover {
        background-color: var(--secondary-color);
        transform: translateY(-2px);
    }

    .btn-warning {
        background-color: var(--warning-color);
        border: none;
    }

    .btn-danger {
        background-color: var(--danger-color);
        border: none;
    }

    .btn-info {
        background-color: var(--accent-color);
        border: none;
    }

    .form-control,
    .form-select {
        border-radius: 8px;
        padding: 10px 15px;
        border: 1px solid var(--border-color);
    }

    .form-control:focus,
    .form-select:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 0.2rem rgba(205, 133, 63, 0.25);
    }

    .modal-content {
        border-radius: 15px;
        border: 1px solid var(--border-color);
    }

    .modal-header {
        background-color: var(--primary-color);
        color: white;
        border-radius: 15px 15px 0 0;
        padding: 20px;
    }

    .modal-body {
        padding: 25px;
    }

    .modal-footer {
        padding: 20px;
        border-top: 1px solid #eee;
    }

    .stats-card {
        background: linear-gradient(45deg, var(--primary-color), var(--accent-color));
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .stats-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }

    .stats-card.active {
        box-shadow: 0 0 0 3px var(--accent-color);
        transform: translateY(-5px);
    }

    .stats-card .card-title {
        font-size: 1.1em;
        opacity: 0.9;
    }

    .stats-card .card-text {
        font-size: 2em;
        font-weight: bold;
        margin: 10px 0;
    }

    .analysis-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        margin-top: 2rem;
    }

    .analysis-card .card-body {
        padding: 2rem;
    }

    .analysis-title {
        color: var(--primary-color);
        font-size: 1.5em;
        margin-bottom: 1.5rem;
    }

    #analysisChart {
        width: 100% !important;
        height: 400px !important;
    }

    .section-title {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 25px;
        padding-bottom: 10px;
        border-bottom: 2px solid var(--accent-color);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(205, 133, 63, 0.05);
    }

    .action-buttons .btn {
        margin: 0 3px;
    }

    .status-badge {
        padding: 8px 15px;
        border-radius: 20px;
        font-weight: 500;
    }

    .status-badge.pending {
        background-color: var(--warning-color);
        color: white;
    }

    .status-badge.processing {
        background-color: var(--accent-color);
        color: white;
    }

    .status-badge.completed {
        background-color: var(--success-color);
        color: white;
    }

    .status-badge.cancelled {
        background-color: var(--danger-color);
        color: white;
    }

    .badge.bg-success {
        background-color: var(--success-color) !important;
    }

    .badge.bg-danger {
        background-color: var(--danger-color) !important;
    }

    .badge.bg-warning {
        background-color: var(--warning-color) !important;
    }

    .badge.bg-info {
        background-color: var(--accent-color) !important;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3 col-lg-2 px-0 sidebar">
            <div class="d-flex flex-column">
                <div class="p-4 text-white">
                    <h4 class="mb-0">Quản trị website</h4>
                    <small class="text-muted">Nội thất Phú Quý</small>
                </div>
                <ul class="nav flex-column px-3">
                    <li class="nav-item">
                        <a class="nav-link active" href="#" data-section="dashboard">
                            <i class="bi bi-speedometer2"></i> Tổng quan
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" data-section="products">
                            <i class="bi bi-box"></i> Sản phẩm
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" data-section="categories">
                            <i class="bi bi-grid"></i> Danh mục
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" data-section="orders">
                            <i class="bi bi-cart"></i> Đơn hàng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" data-section="users">
                            <i class="bi bi-people"></i> Người dùng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" data-section="settings">
                            <i class="bi bi-gear"></i> Cài đặt
                        </a>
                    </li>
                    <li class="nav-item mt-auto">
                        {{!--  href="/admin/login" gốc là  href="/logout" --}}
                        <a class="nav-link" href="/admin/login">
                            <i class="bi bi-box-arrow-right"></i> Đăng xuất
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9 col-lg-10 content">
            {{>dashboard}}
            {{>products}}
            {{>categories}}
            {{>orders}}
            {{>users}}
            {{>settings}}
        </div>
    </div>
</div>

<!-- Include Modals -->
{{>addProduct}}
{{>addCategory}}
{{>editUser}}
{{>viewOrder}}
{{>notification}}
{{>editProduct}}
{{>editCategory}}
{{>logout}}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>
<script>
    // Hàm xử lý chuyển đổi tab
    document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const section = e.target.dataset.section;

            // Cập nhật active state
            document.querySelectorAll('.nav-link').forEach(l => l.classList.remove('active'));
            e.target.classList.add('active');

            // Hiển thị section tương ứng
            document.querySelectorAll('.section').forEach(s => s.classList.add('d-none'));
            document.getElementById(section).classList.remove('d-none');
        });
    });

    document.addEventListener('DOMContentLoaded', function() {
        // Xử lý sự kiện click cho các card thống kê
        const statCards = document.querySelectorAll('.stats-card');
        const analysisTitle = document.getElementById('analysisTitle');
        let currentChart = null;

        // Mặc định hiển thị phân tích Tổng đơn hàng
        showAnalysis('orders');

        statCards.forEach(card => {
            card.addEventListener('click', function() {
                const type = this.getAttribute('data-type');
                showAnalysis(type);
            });
        });

        function showAnalysis(type) {
            // Cập nhật trạng thái active cho card
            statCards.forEach(card => {
                card.classList.remove('active');
                if (card.getAttribute('data-type') === type) {
                    card.classList.add('active');
                }
            });

            // Hủy biểu đồ cũ nếu tồn tại
            if (currentChart) {
                currentChart.destroy();
            }
            
            switch(type) {
                case 'orders':
                    analysisTitle.textContent = 'Phân tích đơn hàng';
                    currentChart = updateOrdersChart();
                    break;
                case 'products':
                    analysisTitle.textContent = 'Phân tích sản phẩm';
                    currentChart = updateProductsChart();
                    break;
                case 'users':
                    analysisTitle.textContent = 'Phân tích người dùng';
                    currentChart = updateUsersChart();
                    break;
                case 'revenue':
                    analysisTitle.textContent = 'Phân tích doanh thu';
                    currentChart = updateRevenueChart();
                    break;
            }
        }

        function updateOrdersChart() {
            const ctx = document.getElementById('analysisChart').getContext('2d');
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
                    datasets: [{
                        label: 'Số đơn hàng',
                        data: [65, 59, 80, 81, 56, 55, 40, 45, 60, 70, 75, 85],
                        borderColor: '#C19977',
                        tension: 0.4,
                        fill: true,
                        backgroundColor: 'rgba(193, 153, 119, 0.1)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updateProductsChart() {
            const ctx = document.getElementById('analysisChart').getContext('2d');
            return new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Phòng khách', 'Phòng ngủ', 'Phòng bếp', 'Văn phòng'],
                    datasets: [{
                        label: 'Số sản phẩm',
                        data: [120, 150, 180, 90],
                        backgroundColor: '#C19977',
                        borderRadius: 5
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updateUsersChart() {
            const ctx = document.getElementById('analysisChart').getContext('2d');
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
                    datasets: [{
                        label: 'Số người dùng mới',
                        data: [30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 200],
                        borderColor: '#C19977',
                        tension: 0.4,
                        fill: true,
                        backgroundColor: 'rgba(193, 153, 119, 0.1)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updateRevenueChart() {
            const ctx = document.getElementById('analysisChart').getContext('2d');
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
                    datasets: [{
                        label: 'Doanh thu (triệu VNĐ)',
                        data: [150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700],
                        borderColor: '#C19977',
                        tension: 0.4,
                        fill: true,
                        backgroundColor: 'rgba(193, 153, 119, 0.1)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    });
</script>